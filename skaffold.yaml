apiVersion: skaffold/v3
kind: Config
metadata:
  name: swi-k8s-opentelemetry-collector
build:
  artifacts:
  - image: swi-k8s-opentelemetry-collector
    docker:
      dockerfile: build/docker/Dockerfile
  local:
    push: false
manifests:
  kustomize:
    paths:
    - tests/deploy/base
    buildArgs:
    - --load-restrictor LoadRestrictionsNone
deploy:
  kubectl: {}
  helm: 
    releases:
      - name: swi-k8s-opentelemetry-collector
        chartPath: deploy/helm
        namespace: monitoring
        createNamespace: true
        setValues:
          otel.metrics.prometheus_url: monitoring-prometheus-server.monitoring.svc.cluster.local:80
          otel.endpoint: timeseries-mock-service:9082
          otel.tls_insecure: true
          otel.container_image: swi-k8s-opentelemetry-collector
          otel.metrics.scrape_interval: "15s"
          cluster.name: cluster name
          cluster.uid: cluster-uid-123456789
        upgradeOnChange: true
      - name: monitoring
        remoteChart: prometheus
        namespace: monitoring
        createNamespace: true
        repo: https://prometheus-community.github.io/helm-charts
  kubeContext: docker-desktop
profiles:
- name: builder-only
  build:
    artifacts:
    - image: swi-k8s-opentelemetry-collector-builder
      docker:
        dockerfile: build/docker/Dockerfile
        target: builder
        buildArgs:
          CREATE_VENDOR_DIR: "true"
    local:
      push: false
- name: ci
  activation:
  - env: CI=true
  build:
    local:
      push: false
      useBuildkit: true
      concurrency: 0
  deploy:
    # `default` is k3s default context name
    kubeContext: default
