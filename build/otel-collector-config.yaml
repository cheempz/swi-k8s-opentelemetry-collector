exporters:
  otlp:
    endpoint: ${OTEL_ENVOY_ADDRESS}
    tls:
      insecure: ${OTEL_ENVOY_ADDRESS_TLS_INSECURE}
    headers:
      "Authorization": "Bearer ${SOLARWINDS_API_TOKEN}"
extensions:
  health_check: {}
  memory_ballast:
    size_mib: "204"

processors:
  memory_limiter:
    check_interval: 5s
    limit_mib: 409
    spike_limit_mib: 128
  prometheustypeconvert:
    transforms:
      - include: container_cpu_usage_seconds_total
        convert_type: sum
  metricstransform:
    transforms:
      - include: ^(.*)$$
        match_type: regexp
        action: update
        new_name: k8s.$${1}
      - include: k8s.kube_namespace_status_phase
        action: update
        operations:
          - action: update_label
            label: phase
            new_label: sw.k8s.namespace.status
      - include: k8s.kube_pod_status_phase
        action: update
        operations:
          - action: update_label
            label: phase
            new_label: sw.k8s.pod.status
      - include: k8s.container_cpu_usage_seconds_total
        action: insert
        new_name: k8s.container_cpu_usage_seconds_rate
      - include: k8s.kube_node_status_capacity
        experimental_match_labels: { "resource": "cpu" }
        action: insert
        new_name: k8s.kube_node_status_capacity_cpu
      - include: k8s.kube_node_status_capacity
        experimental_match_labels: { "resource": "memory" }
        action: insert
        new_name: k8s.kube_node_status_capacity_memory
  cumulativetodelta:
      include:
          metrics:
              - k8s.container_cpu_usage_seconds_rate
          match_type: strict
  deltatorate:
      metrics:
          - k8s.container_cpu_usage_seconds_rate
  groupbyattrs:
    keys:
      - node
      - exported_node
      - kubelet_version
      - provider_id
      - os_image
      - namespace
      - exported_namespace
      - pod
      - uid
      - pod_ip
      - host_ip
      - created_by_kind
      - created_by_name
      - host_network
      - priority_class
      - container_id
      - container
      - image
      - image_id
      - sw.k8s.pod.status
      - sw.k8s.namespace.status
  resource:
    attributes:
    # Remove useless attributes
    - key: service.name
      action: delete

    - key: host.name
      action: delete

    - key: port
      action: delete

    - key: scheme
      action: delete

    # Cluster
    - key: sw.k8s.cluster.uid
      value: ${CLUSTER_UID}
      action: insert

    - key: k8s.cluster.name
      value: ${CLUSTER_NAME}
      action: insert

    # Node
    - key: k8s.node.name
      from_attribute: node
      action: insert

    - key: host.id
      from_attribute: k8s.node.name
      action: insert
    
    - key: node
      action: delete

    - key: k8s.node.name
      from_attribute: exported_node
      action: upsert
    - key: exported_node
      action: delete

    - key: sw.k8s.node.version
      from_attribute: kubelet_version
      action: insert
    - key: kubelet_version
      action: delete

    - key: sw.k8s.node.provider.id
      from_attribute: provider_id
      action: insert
    - key: provider_id
      action: delete

    - key: sw.k8s.node.os.image
      from_attribute: os_image
      action: insert
    - key: os_image
      action: delete

    - key: host.id
      from_attribute: k8s.node.name
      action: insert

    # Namespace
    - key: k8s.namespace.name
      from_attribute: namespace
      action: insert
    - key: namespace
      action: delete

    - key: k8s.namespace.name
      from_attribute: exported_namespace
      action: upsert
    - key: exported_namespace
      action: delete

    # Pod
    - key: k8s.pod.name
      from_attribute: pod
      action: insert
    - key: pod
      action: delete

    - key: k8s.pod.uid
      from_attribute: uid
      action: insert
    - key: uid
      action: delete

    - key: sw.k8s.pod.ip
      from_attribute: pod_ip
      action: insert
    - key: pod_ip
      action: delete

    - key: sw.k8s.pod.host.ip
      from_attribute: host_ip
      action: insert
    - key: host_ip
      action: delete

    - key: sw.k8s.pod.createdby.kind
      from_attribute: created_by_kind
      action: insert
    - key: created_by_kind
      action: delete

    - key: sw.k8s.pod.createdby.name
      from_attribute: created_by_name
      action: insert
    - key: created_by_name
      action: delete

    - key: sw.k8s.pod.host.network
      from_attribute: host_network
      action: insert
    - key: host_network
      action: delete

    - key: sw.k8s.pod.priority_class
      from_attribute: priority_class
      action: insert
    - key: priority_class
      action: delete
    
    # Container
    - key: k8s.container.id
      from_attribute: container_id
      action: insert
    - key: container_id
      action: delete

    - key: k8s.container.name
      from_attribute: container
      action: insert
    - key: container
      action: delete

    - key: k8s.container.image.id
      from_attribute: image_id
      action: insert
    - key: image_id
      action: delete

    - key: k8s.container.image.name
      from_attribute: image
      action: insert
    - key: image
      action: delete

  attributes:
    actions:
      - key: sw.namespace
        action: insert
        value: k8s_monitor

  batch:
    send_batch_size: 8192
    send_batch_max_size: 8192
    timeout: 1s
receivers:
  k8s_events:
  prometheus:
    config:
      scrape_configs:
        - job_name: prometheus
          scrape_interval: ${SCRAPE_INTERVAL}
          metrics_path: '/federate'
          params:
            'match[]':
              - 'container_cpu_usage_seconds_total'
              - 'container_spec_cpu_quota'
              - 'container_spec_cpu_period'
              - 'container_memory_working_set_bytes'
              - 'container_spec_memory_limit_bytes'
              - 'kube_node_info'
              - 'kube_node_created'
              - 'kube_node_status_capacity'
              - 'kube_pod_created'
              - 'kube_pod_info'
              - 'kube_pod_start_time'
              - 'kube_pod_completion_time'
              - 'kube_pod_status_phase'
              - 'kube_pod_start_time'
              - 'kube_resourcequota'
              - '{__name__=~"kube_pod_container_.*"}'
          static_configs:
            - targets:
              - ${PROMETHEUS_URL}
service:
  extensions:
  - health_check
  - memory_ballast
  pipelines:
    metrics:
      exporters:
      - otlp
      processors:
      - prometheustypeconvert
      - metricstransform
      - cumulativetodelta
      - deltatorate
      - groupbyattrs
      - resource
      - memory_limiter
      - batch
      receivers:
      - prometheus
    logs:
      exporters:
      - otlp
      processors:
      - resource
      - attributes
      - memory_limiter
      - batch
      receivers:
      - k8s_events
  telemetry:
    logs:
      level: "info"
    metrics:
      address: 0.0.0.0:8888