---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: swi-opentelemetry-collector
  labels:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: swi-opentelemetry-collector
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: swi-opentelemetry-collector
  labels:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: swi-opentelemetry-collector
data:
  relay: |
    exporters:
      otlp:
        endpoint: ${OTEL_ENVOY_ADDRESS}
        tls:
          insecure: ${OTEL_ENVOY_ADDRESS_TLS_INSECURE}
        headers:
          "Authorization": "Bearer ${SOLARWINDS_API_TOKEN}"
    extensions:
      health_check: {}
      memory_ballast:
        size_mib: "204"
    processors:
      memory_limiter:
        check_interval: 5s
        limit_mib: 409
        spike_limit_mib: 128
      metricstransform:
        transforms:
          - include: ^(.*)$$
            match_type: regexp
            action: update
            new_name: k8s.$${1}
          - include: ^(.*)$$
            match_type: regexp
            action: update
            operations:
              - action: add_label
                new_label: cluster_name
                new_value: ${CLUSTER_NAME}
          - include: ^(.*)$$
            match_type: regexp
            action: update
            operations:
              - action: add_label
                new_label: cluster_uid
                new_value: ${CLUSTER_UID}
      batch:
        send_batch_size: 8192
        send_batch_max_size: 8192
        timeout: 1s
    receivers:
      prometheus:
        config:
          scrape_configs:
            - job_name: prometheus
              scrape_interval: ${SCRAPE_INTERVAL}
              metrics_path: '/federate'
              params:
                'match[]':
                  - 'container_cpu_usage_seconds_total'
                  - 'container_spec_cpu_quota'
                  - 'container_spec_cpu_period'
                  - 'container_memory_working_set_bytes'
                  - 'container_spec_memory_limit_bytes'
                  - 'kube_node_info'
                  - 'kube_node_created'
                  - 'kube_node_status_capacity'
                  - 'kube_pod_created'
                  - 'kube_pod_info'
                  - 'kube_pod_start_time'
                  - 'kube_pod_completion_time'
                  - 'kube_pod_status_phase'
                  - 'kube_pod_start_time'
                  - 'kube_resourcequota'
                  - '{__name__=~"kube_pod_container_.*"}'
              static_configs:
                - targets:
                  - ${PROMETHEUS_URL}
    service:
      extensions:
      - health_check
      - memory_ballast
      pipelines:
        metrics:
          exporters:
          - otlp
          processors:
          - metricstransform
          - memory_limiter
          - batch
          receivers:
          - prometheus
      telemetry:
        logs:
          level: "debug"
        metrics:
          address: 0.0.0.0:8888
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: swi-opentelemetry-collector
  labels:
    app.kubernetes.io/name: opentelemetry-collector
    app.kubernetes.io/instance: swi-opentelemetry-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-collector
      app.kubernetes.io/instance: swi-opentelemetry-collector
      component: standalone-collector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: opentelemetry-collector
        app.kubernetes.io/instance: swi-opentelemetry-collector
        component: standalone-collector
    spec:
      serviceAccountName: swi-opentelemetry-collector
      securityContext: {}
      containers:
        - name: opentelemetry-collector
          command:
            - /otelcol-contrib
            - --config=/conf/relay.yaml
          securityContext: {}
          image: "otel/opentelemetry-collector-contrib:0.43.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: SOLARWINDS_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: solarwinds-api-token
                  key: SOLARWINDS_API_TOKEN
                  optional: true
            - name: PROMETHEUS_URL
              value: "prometheus-server.monitoring.svc.cluster.local:80"
            - name: OTEL_ENVOY_ADDRESS
              value: "otel-collector.st-nighthawk.solarwinds.cloud:443"
            - name: OTEL_ENVOY_ADDRESS_TLS_INSECURE
              value: "false"
            - name: SCRAPE_INTERVAL
              value: "60s"
            - name: CLUSTER_NAME
              value: "cluster name"
            - name: CLUSTER_UID
              value: "cluster-uid-123456789"
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          resources:
            limits:
              cpu: 256m
              memory: 512Mi
          volumeMounts:
            - mountPath: /conf
              name: opentelemetry-collector-configmap
      volumes:
        - name: opentelemetry-collector-configmap
          configMap:
            name: swi-opentelemetry-collector
            items:
              - key: relay
                path: relay.yaml
