Gateway config should match snapshot when using default values:
  1: |
    gateway.config: "exporters:\n  otlp:\n    endpoint: ${OTEL_ENVOY_ADDRESS}\n    tls:\n      insecure: ${OTEL_ENVOY_ADDRESS_TLS_INSECURE}\n    headers:\n      \"Authorization\": \"Bearer ${SOLARWINDS_API_TOKEN}\"\n    retry_on_failure:\n      enabled: true\n      initial_interval: 10s\n      max_interval: 30s\n      max_elapsed_time: 300s\n    sending_queue:\n      enabled: true\n      num_consumers: 10\n      queue_size: 1000\n    timeout: 30s\n\nextensions:\n  health_check:\n    endpoint: 0.0.0.0:13133\n\nprocessors:\n  batch:\n    send_batch_max_size: 1024\n    send_batch_size: 1024\n    timeout: 1s\n\n  memory_limiter:\n    check_interval: 1s\n    limit_percentage: 80\n    spike_limit_percentage: 25\n\n  k8sattributes:\n    auth_type: \"serviceAccount\"\n    passthrough: false\n    extract:\n      metadata:\n        - k8s.deployment.name\n        - k8s.replicaset.name\n        - k8s.daemonset.name\n        - k8s.job.name\n        - k8s.cronjob.name\n        - k8s.statefulset.name\n        - k8s.node.name\n    pod_association:\n      - sources:\n          - from: resource_attribute\n            name: k8s.pod.name\n          - from: resource_attribute\n            name: k8s.namespace.name\n\n  metricstransform/rename:\n    transforms:\n      # add predefined prefix to all proxied metrics\n      - include: ^(.*)$$\n        match_type: regexp\n        action: update\n        new_name: k8s.$${1}\n\n  resource:\n    attributes:\n      # Collector and Manifest version\n      - key: sw.k8s.agent.manifest.version\n        value: ${MANIFEST_VERSION}\n        action: insert\n\n      - key: sw.k8s.agent.app.version\n        value: ${APP_VERSION}\n        action: insert\n\n      # Cluster\n      - key: sw.k8s.cluster.uid\n        value: ${CLUSTER_UID}\n        action: insert\n\n      - key: k8s.cluster.name\n        value: ${CLUSTER_NAME}\n        action: upsert\n\n  # Those attributes are defined by SWO K8s Collector even if they are send as attributes in OTLP message\n  attributes/clean-attributes-otlp-metrics:\n    actions:\n      - key: k8s.cluster.name\n        action: delete\n\n  transform/scope:\n    metric_statements:\n      - statements:\n        - set(scope.name, \"\")\n        - set(scope.version, \"\")\n    log_statements:\n      - statements:\n        - set(scope.name, \"\")\n        - set(scope.version, \"\")\n    trace_statements:\n      - statements:\n        - set(scope.name, \"\")\n        - set(scope.version, \"\")\n\n  filter/otlp-metrics:\n    metrics:\n      metric:\n        # metrics from EBPF reducer that are not needed\n        - 'IsMatch(name, \"^ebpf_net.*$\")'\n\n  filter/histograms:\n    metrics:\n      metric:\n        - 'type == METRIC_DATA_TYPE_HISTOGRAM'\n\n  filter/histograms_beyla:\n    metrics:\n      metric:\n        # Exclude all histograms except the ones listed below\n        # excluded histograms are:\n        # - all histograms from beyla\n        - 'type == METRIC_DATA_TYPE_HISTOGRAM and not(\n            name == \"http.client.request.duration\" or\n            name == \"http.client.request.body.size\" or\n            name == \"http.client.response.body.size\" or\n            name == \"http.server.request.duration\" or \n            name == \"http.server.request.body.size\" or\n            name == \"http.server.response.body.size\" or\n            name == \"rpc.client.duration\" or\n            name == \"rpc.server.duration\" or\n            name == \"sql.client.duration\" or\n            name == \"redis.client.duration\" or\n            name == \"messaging.publish.duration\" or\n            name == \"messaging.process.duration\"\n          )'\n\n  swok8sworkloadtype/beyla:\n    workload_mappings:\n      - name_attr: k8s.src.owner.name\n        namespace_attr: k8s.src.namespace\n        workload_type_attr: k8s.src.owner.type\n        expected_types:\n          - deployments\n          - daemonsets\n          - statefulsets\n          - services\n          - jobs\n          - cronjobs\n          - pods\n          - nodes\n      - name_attr: k8s.dst.owner.name\n        namespace_attr: k8s.dst.namespace\n        workload_type_attr: k8s.dst.owner.type\n        expected_types:\n          - deployments\n          - daemonsets\n          - statefulsets\n          - services\n          - jobs\n          - cronjobs\n          - pods\n          - nodes\n      - name_attr: k8s.owner.name\n        namespace_attr: k8s.namespace.name\n        workload_type_attr: k8s.owner.type\n        expected_types:\n          - deployments\n          - daemonsets\n          - statefulsets\n          - services\n          - jobs\n          - cronjobs\n          - pods\n          - nodes\n\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n\nconnectors:\n  forward/metrics_common:\n  routing/metrics:\n    default_pipelines: [metrics]\n    table:\n      - context: metric\n        pipelines: [metrics/beyla]\n        condition: |\n          name == \"http.client.request.duration\" or\n          name == \"http.client.request.body.size\" or\n          name == \"http.client.response.body.size\" or\n          name == \"http.server.request.duration\" or \n          name == \"http.server.request.body.size\" or\n          name == \"http.server.response.body.size\" or\n          name == \"rpc.client.duration\" or\n          name == \"rpc.server.duration\" or\n          name == \"sql.client.duration\" or\n          name == \"redis.client.duration\" or\n          name == \"messaging.publish.duration\" or\n          name == \"messaging.process.duration\" or\n          name == \"process.cpu.time\" or\n          name == \"process.cpu.utilization\" or\n          name == \"process.memory.usage\" or\n          name == \"process.memory.virtual\" or\n          name == \"process.disk.io\" or\n          name == \"process.network.io\" or\n          name == \"beyla.network.flow.bytes\" or\n          name == \"beyla.network.inter.zone.bytes\"\n\nservice:\n  extensions:\n    - health_check\n  pipelines:\n    metrics:\n      exporters:\n        - forward/metrics_common\n      processors:\n        - filter/histograms\n      receivers:\n        - routing/metrics\n    metrics/beyla:\n      exporters:\n        - forward/metrics_common\n      processors:\n        - filter/histograms_beyla\n        - swok8sworkloadtype/beyla\n      receivers:\n        - routing/metrics\n    metrics/common_in:\n      exporters:\n        - routing/metrics\n      processors:\n        - memory_limiter\n      receivers:\n        - otlp\n    metrics/common_out:\n      exporters:\n        - otlp\n      processors:\n        - memory_limiter\n        - k8sattributes\n        - metricstransform/rename\n        - attributes/clean-attributes-otlp-metrics\n        - resource\n        - transform/scope\n        - batch\n      receivers:\n        - forward/metrics_common\n    logs:\n      exporters:\n        - otlp\n      processors:\n        - memory_limiter\n        - k8sattributes\n        - resource\n        - transform/scope\n        - batch\n      receivers:\n        - otlp\n    traces:\n      exporters:\n        - otlp\n      processors:\n        - memory_limiter\n        - k8sattributes\n        - resource\n        - transform/scope\n        - batch\n      receivers:\n        - otlp\n  telemetry:\n    logs:\n      level: info\n    metrics:\n      readers:\n        - pull:\n            exporter:\n              prometheus:\n                host: \"0.0.0.0\"\n                port: 8888"
